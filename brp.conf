input {
  file {
  	path => "/Users/meganlee/projects/logstash-1.4.2/brp.log"
	}	
}

filter {
	collate {
  	interval => "10s"
	}

  if [message] =~ /^BRP.*$/ {
  	grok {
    	match => [ "message", "BRP,%{TIMESTAMP_ISO8601:timestamp},%{HEXSTRING_64:trace_id},%{HEXSTRING_64:span_id},%{HEXSTRING_64:parent_span_id},%{NAMESTRING:service_name},%{NAMESTRING:hostname},%{ANNOTATION:annotation},%{NAMESTRING:annotation_schema_version},%{STRING:raw_value}" ]
    	remove_field => ["message", "host", "@version", "@timestamp"]
  	}

  	if "_grokparsefailure" in [tags] {
  		drop {}
		}

		if [annotation] == "cs" {
			grok {
				match => ["raw_value", "%{URLPATH:url_path}(?:,%{STRING:url_params})?"]
			}
		} else if [annotation] == "cr" {
			grok {
				match => ["raw_value", "(?:%{STATUS_NORMAL:status_code})|(?:%{STATUS_ERROR:status_code},%{STRING:error_message})"]
			}
		} else if [annotation] == "sr" {
			grok {
				match => ["raw_value", "%{USER:user}"]
			}
		}

		mutate {
			remove_field => ["raw_value"]
		}


  } else {
  	drop {}
  }
}

output {
  file {
  	codec => json
  	path => "/Users/meganlee/projects/logstash-1.4.2/output.txt"
  }
}
